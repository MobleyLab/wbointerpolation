"""
Script for reading and displaying data from the pickle files generated by single-conformer.py
Usage:
    python amber_vs_openeye.py --amber_file [FILE] --openeye_file [FILE]
"""
import argparse
import pickle

def amber_vs_openeye(amber_file, openeye_file):
    """
    Reads and displays the amber and openeye bond order comparisons for every molecule
    """
    
    with open(amber_file, "rb") as amber_file:
        with open(openeye_file, "rb") as openeye_file:
            with open("analysis/amber_vs_openeye_data.txt", "w") as data_file:
                amber_data = pickle.load(amber_file)
                openeye_data = pickle.load(openeye_file)
                for i in range(len(amber_data)):
                    data_file.write(f"Mol number {i+1}: {amber_data[i]}\n")
                    data_file.write("\n")
                    
                    data_file.write(f"{'Amber bond orders':<30} {'Openeye bond orders'}\n")
                    for amber_bond, off_bond in zip(amber_data[i].bonds, openeye_data[i].bonds):
                        data_file.write(f"{str(amber_bond.fractional_bond_order):<30} {str(off_bond.fractional_bond_order)}")
                        data_file.write("\n")
                    data_file.write("\n")

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("--amber_file",
                        type=str,
                        required=True,
                        help=("Name of a amber pkl file containing molecules "
                              "to analyze"))
    parser.add_argument("--openeye_file",
                    type=str,
                    required=True,
                    help=("Name of a openeye pkl file containing molecules "
                          "to analyze"))
    args = parser.parse_args()
    
    amber_vs_openeye(args.amber_file, args.openeye_file)
        
if __name__ == "__main__":
    main()
